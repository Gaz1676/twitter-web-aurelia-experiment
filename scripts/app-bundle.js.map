{"version":3,"sources":["src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/fixtures.js","src/services/messages.js","src/services/tweet-service.js","src/viewmodels/dashboard/dashboard.js","src/viewmodels/friends/friends.js","src/viewmodels/login/login.js","src/viewmodels/logout/logout.js","src/viewmodels/signup/signup.js","src/viewmodels/stats/stats.js","src/viewmodels/timeline/timeline.js","src/viewmodels/tweet/tweet.js"],"names":["App","au","ea","subscribe","msg","status","success","setRoot","then","router","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","debug","testing","Home","aurelia","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","Fixtures","users","firstName","lastName","email","password","tweets","PostsUpdate","posts","LoginStatus","TweetService","data","loggedInUser","register","newUser","login","message","publish","logout","sendTweet","tweeter","text","tweet","push","parseInt","length","console","log","addFriend","selectedFriend","friend","Dashboard","Friend","ts","tweetService","membersTweet","forEach","indexOf","Login","prompt","e","Logout","Signup","registered","Stats","attached","$","transition","Timeline","Tweet","createTweet"],"mappings":";;;;;;;;;;;;;;;;MAKaA,cAAAA,cADZ;AAGC,iBAAYC,EAAZ,EAAgBC,EAAhB,EAAoB;AAAA;;AAAA;;AAClBA,SAAGC,SAAH,wBAA0B,eAAO;AAC/B,YAAIC,IAAIC,MAAJ,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AAC/BL,aAAGM,OAAH,CAAW,MAAX,EAAmBC,IAAnB,CAAwB,YAAM;AAC5B,kBAAKC,MAAL,CAAYC,eAAZ,CAA4B,OAA5B;AACD,WAFD;AAGD,SAJD,MAIO;AACLT,aAAGM,OAAH,CAAW,KAAX,EAAkBC,IAAlB,CAAuB,YAAM;AAC3B,kBAAKC,MAAL,CAAYC,eAAZ,CAA4B,OAA5B;AACD,WAFD;AAGD;AACF,OAVD;AAWD;;kBAEDC,2CAAgBC,QAAQH,QAAQ;AAC9BG,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,OAAL,CAAT,EAAwBC,MAAM,OAA9B,EAAuCC,UAAU,wBAAjD,EAA2EC,KAAK,IAAhF,EAAsFC,OAAO,OAA7F,EADS,EAET,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EAFS,CAAX;AAIA,WAAKT,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;oBC3BY;AACbU,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;;;;;;;;;;;MCGFC,eAAAA,eADZ;AAGC,kBAAYpB,EAAZ,EAAgB;AAAA;;AACd,WAAKqB,OAAL,GAAerB,EAAf;AACD;;mBAEDU,2CAAgBC,QAAQH,QAAQ;AAC9BG,aAAOC,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAAuBC,MAAM,OAA7B,EAAsCC,UAAU,wBAAhD,EAA0EC,KAAK,IAA/E,EAAqFC,OAAO,OAA5F,EADS,EAET,EAAEJ,OAAO,UAAT,EAAqBC,MAAM,UAA3B,EAAuCC,UAAU,8BAAjD,EAAiFC,KAAK,IAAtF,EAA4FC,OAAO,UAAnG,EAFS,EAGT,EAAEJ,OAAO,SAAT,EAAoBC,MAAM,SAA1B,EAAqCC,UAAU,4BAA/C,EAA6EC,KAAK,IAAlF,EAAwFC,OAAO,SAA/F,EAHS,EAIT,EAAEJ,OAAO,OAAT,EAAkBC,MAAM,OAAxB,EAAiCC,UAAU,wBAA3C,EAAqEC,KAAK,IAA1E,EAAgFC,OAAO,OAAvF,EAJS,EAKT,EAAEJ,OAAO,WAAT,EAAsBC,MAAM,WAA5B,EAAyCC,UAAU,gCAAnD,EAAqFC,KAAK,IAA1F,EAAgGC,OAAO,WAAvG,EALS,EAMT,EAAEJ,OAAO,QAAT,EAAmBC,MAAM,QAAzB,EAAmCC,UAAU,0BAA7C,EAAyEC,KAAK,IAA9E,EAAoFC,OAAO,QAA3F,EANS,CAAX;AAQA,WAAKT,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;UCjBac,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBD,OAAnB,EAA4B;AACjCA,YAAQE,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYP,KAAhB,EAAuB;AACrBG,cAAQE,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYP,OAAhB,EAAyB;AACvBE,cAAQE,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDN,YAAQO,KAAR,GAAgBrB,IAAhB,CAAqB;AAAA,aAAMc,QAAQf,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UChBegB,YAAAA;AAAT,WAASA,SAAT,CAAmBX,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;MCFoBkB;;;SAEnBC,QAAQ;AACN,2BAAqB;AACnBC,mBAAW,OADQ;AAEnBC,kBAAU,SAFS;AAGnBC,eAAO,mBAHY;AAInBC,kBAAU;AAJS,OADf;AAON,2BAAqB;AACnBH,mBAAW,OADQ;AAEnBC,kBAAU,SAFS;AAGnBC,eAAO,mBAHY;AAInBC,kBAAU;AAJS;AAPf;SAeRC,SAAS;;;oBAjBUN;;;;;;;;;;;;;;;MCARO,sBAAAA,cACX,qBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKA,KAAL,GAAaA,KAAb;AACD;;MAGUC,sBAAAA,cACX,qBAAYlC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;MCHkBmC,uBADpB;AAQC,0BAAYC,IAAZ,EAAkBvC,EAAlB,EAAsB;AAAA;;AAAA,WALtBkC,MAKsB,GALb,EAKa;AAAA,WAJtBL,KAIsB,GAJd,EAIc;AAAA,WAHtBO,KAGsB,GAHd,CAGc;AAAA,WAFtBI,YAEsB,GAFP,EAEO;;AACpB,WAAKN,MAAL,GAAcK,KAAKL,MAAnB;AACA,WAAKL,KAAL,GAAaU,KAAKV,KAAlB;AACA,WAAK7B,EAAL,GAAUA,EAAV;AACD;;2BAEDyC,6BAASX,WAAWC,UAAUC,OAAOC,UAAU;AAC7C,UAAMS,UAAU;AACdZ,mBAAWA,SADG;AAEdC,kBAAUA,QAFI;AAGdC,eAAOA,KAHO;AAIdC,kBAAUA;AAJI,OAAhB;AAMA,WAAKJ,KAAL,CAAWG,KAAX,IAAoBU,OAApB;AACA,WAAKZ,SAAL,GAAiB,EAAjB;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACD;;2BAEDU,uBAAMX,OAAOC,UAAU;AACrB,UAAM9B,SAAS;AACbC,iBAAS,KADI;AAEbwC,iBAAS;AAFI,OAAf;;AAKA,UAAI,KAAKf,KAAL,CAAWG,KAAX,CAAJ,EAAuB;AACrB,YAAI,KAAKH,KAAL,CAAWG,KAAX,EAAkBC,QAAlB,KAA+BA,QAAnC,EAA6C;AAC3C9B,iBAAOC,OAAP,GAAiB,IAAjB;AACAD,iBAAOyC,OAAP,GAAiB,WAAjB;AACA,eAAKJ,YAAL,GAAoB,KAAKX,KAAL,CAAWG,KAAX,CAApB;AACD,SAJD,MAIO;AACL7B,iBAAOyC,OAAP,GAAiB,oBAAjB;AACD;AACF,OARD,MAQO;AACLzC,eAAOyC,OAAP,GAAiB,cAAjB;AACD;AACD,WAAK5C,EAAL,CAAQ6C,OAAR,CAAgB,0BAAgB1C,MAAhB,CAAhB;AACD;;2BAED2C,2BAAS;AACP,UAAM3C,SAAS;AACbC,iBAAS,KADI;AAEbwC,iBAAS;AAFI,OAAf;AAIA,WAAK5C,EAAL,CAAQ6C,OAAR,CAAgB,0BAAgB,0BAAgB1C,MAAhB,CAAhB,CAAhB;AACD;;2BAED4C,+BAAUC,SAASC,MAAM;AACvB,UAAMD,WAAWA,YAAY,IAAzB,IAAoCC,QAAQA,SAAS,IAAzD,EAAgE;AAC9D,YAAMC,QAAQ;AACZF,mBAASA,OADG;AAEZC,gBAAMA;AAFM,SAAd;AAIA,aAAKf,MAAL,CAAYiB,IAAZ,CAAiBD,KAAjB;AACA,aAAKd,KAAL,GAAagB,SAAS,KAAKlB,MAAL,CAAYmB,MAArB,EAA6B,EAA7B,CAAb;AACA,aAAKrD,EAAL,CAAQ6C,OAAR,CAAgB,0BAAgB,KAAKT,KAArB,CAAhB;AACAkB,gBAAQC,GAAR,CAAYP,QAAQlB,SAAR,GAAoB,YAApB,GAAmCmB,IAA/C;AACAK,gBAAQC,GAAR,CAAY,mBAAmB,KAAKrB,MAAL,CAAYmB,MAA3C;AACD,OAVD,MAUO;AACLC,gBAAQC,GAAR,CAAY,oDAAZ;AACAD,gBAAQC,GAAR,CAAY,mBAAmB,KAAKrB,MAAL,CAAYmB,MAA3C;AACD;AACF;;2BAEDG,+BAAUC,gBAAgB;AACxB,UAAMC,SAAS;AACb5B,mBAAW2B,eAAe3B,SADb;AAEbC,kBAAU0B,eAAe1B;AAFZ,OAAf;AAIAuB,cAAQC,GAAR,CAAY,gBAAgBG,OAAO5B,SAAvB,GAAmC,GAAnC,GAAyC4B,OAAO3B,QAA5D;AACD;;;;oBA9EkBO;;;;;;;;;;;;;;;MCNRqB,oBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCIAC,iBAAAA,iBADZ,qEAKC,gBAAYC,EAAZ,EAAgB;AAAA;;AAAA,SAFhB3B,MAEgB,GAFP,EAEO;;AACd,SAAK4B,YAAL,GAAoBD,EAApB;AACA,SAAK3B,MAAL,GAAc2B,GAAG3B,MAAjB;AACA,QAAI6B,eAAe,EAAnB;;AAEA,SAAK7B,MAAL,CAAY8B,OAAZ,CAAoB,iBAAS;AAC3B,UAAID,aAAaE,OAAb,CAAqBf,KAArB,MAAgC,CAAC,CAArC,EAAwC;AACtCa,qBAAaZ,IAAb,CAAkBD,KAAlB;AACD;AACD,aAAOa,YAAP;AACD,KALD;AAMD;;;;;;;;;;;;;;;;;;;;;;;;;;MCfUG,gBAAAA,gBADZ;AAIC,mBAAYL,EAAZ,EAAgB;AAAA;;AACd,WAAKC,YAAL,GAAoBD,EAApB;AACA,WAAKM,MAAL,GAAc,EAAd;AACD;;oBAEDxB,uBAAMyB,GAAG;AACPd,cAAQC,GAAR,uBAAgC,KAAKvB,KAArC;AACA,WAAK8B,YAAL,CAAkBnB,KAAlB,CAAwB,KAAKX,KAA7B,EAAoC,KAAKC,QAAzC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCXUoC,iBAAAA,iBADZ;AAGC,oBAAYP,YAAZ,EAA0B;AAAA;;AACxB,WAAKA,YAAL,GAAoBA,YAApB;AACD;;qBAEDhB,2BAAS;AACPQ,cAAQC,GAAR,CAAY,aAAZ;AACA,WAAKO,YAAL,CAAkBhB,MAAlB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCTUwB,iBAAAA,iBADZ;AAQC,oBAAYT,EAAZ,EAAgB;AAAA;;AAAA,WALhB/B,SAKgB,GALJ,OAKI;AAAA,WAJhBC,QAIgB,GAJL,SAIK;AAAA,WAHhBC,KAGgB,GAHR,mBAGQ;AAAA,WAFhBC,QAEgB,GAFL,QAEK;;AACd,WAAK6B,YAAL,GAAoBD,EAApB;AACD;;qBAEDpB,6BAAS2B,GAAG;AACV,WAAKG,UAAL,GAAkB,IAAlB;AACA,WAAKT,YAAL,CAAkBrB,QAAlB,CAA2B,KAAKX,SAAhC,EAA2C,KAAKC,QAAhD,EAA0D,KAAKC,KAA/D,EAAsE,KAAKC,QAA3E;AACA,WAAK6B,YAAL,CAAkBnB,KAAlB,CAAwB,KAAKX,KAA7B,EAAoC,KAAKC,QAAzC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCZUuC,gBAAAA,gBADZ;AAKC,mBAAYxE,EAAZ,EAAgB6D,EAAhB,EAAoB;AAAA;;AAAA;;AAAA,WAFpBzB,KAEoB,GAFZ,CAEY;;AAClB,WAAKyB,EAAL,GAAUA,EAAV;AACA7D,SAAGC,SAAH,wBAA0B,eAAO;AAC/B,cAAKmC,KAAL,GAAalC,IAAIkC,KAAjB;AACD,OAFD;AAGD;;oBAEDqC,+BAAW;AACT,WAAKrC,KAAL,GAAa,KAAKyB,EAAL,CAAQzB,KAArB;AACAsC,QAAE,SAAF,EACGC,UADH,CACc,QADd,EACwB,QADxB;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MClBUC,mBAAAA,mBADZ;AAKC,sBAAYf,EAAZ,EAAgB;AAAA;;AAAA,WAFhB3B,MAEgB,GAFP,EAEO;;AACd,WAAK4B,YAAL,GAAoBD,EAApB;AACA,WAAK3B,MAAL,GAAc2B,GAAG3B,MAAjB;AACD;;uBAEDuC,+BAAW;AACT,4BAAE,OAAF,EACGE,UADH,CACc,MADd,EACsB,QADtB;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCbUE,gBAAAA,gBADZ;AAMC,mBAAYhB,EAAZ,EAAgB;AAAA;;AAAA,WAHhBZ,IAGgB,GAHT,EAGS;AAAA,WAFhBD,OAEgB,GAFN,EAEM;;AACd,WAAKc,YAAL,GAAoBD,EAApB;AACA,WAAKb,OAAL,GAAea,GAAGrB,YAAlB;AACD;;oBACDsC,qCAAc;AACZ,WAAKhB,YAAL,CAAkBf,SAAlB,CAA4B,KAAKC,OAAjC,EAA0C,KAAKC,IAA/C;AACA,WAAKA,IAAL,GAAY,EAAZ;AACD;;oBACDwB,+BAAW;AACT,4BAAE,OAAF,EACGE,UADH,CACc,iBADd,EACiC,OADjC,EAEGA,UAFH,CAEc,iBAFd;AAID","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\n\n@inject(Aurelia, EventAggregator)\nexport class App {\n\n  constructor(au, ea) {\n    ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('tweet');\n        });\n      } else {\n        au.setRoot('app').then(() => {\n          this.router.navigateToRoute('login');\n        });\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\n\n@inject(Aurelia)\nexport class Home {\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'home'], name: 'tweet', moduleId: 'viewmodels/tweet/tweet', nav: true, title: 'Tweet' },\n      { route: 'timeline', name: 'timeline', moduleId: 'viewmodels/timeline/timeline', nav: true, title: 'Timeline' },\n      { route: 'friends', name: 'friends', moduleId: 'viewmodels/friends/friends', nav: true, title: 'Friends' },\n      { route: 'stats', name: 'stats', moduleId: 'viewmodels/stats/stats', nav: true, title: 'Stats' },\n      { route: 'dashboard', name: 'dashboard', moduleId: 'viewmodels/dashboard/dashboard', nav: true, title: 'Dashboard' },\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\n    ]);\n    this.router = router;\n  }\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export default class Fixtures {\n\n  users = {\n    'homer@simpson.com': {\n      firstName: 'Homer',\n      lastName: 'Simpson',\n      email: 'homer@simpson.com',\n      password: 'secret'\n    },\n    'marge@simpson.com': {\n      firstName: 'Marge',\n      lastName: 'Simpson',\n      email: 'marge@simpson.com',\n      password: 'secret'\n    }\n  };\n\n  tweets = [];\n}\n","export class PostsUpdate {\n  constructor(posts) {\n    this.posts = posts;\n  }\n}\n\nexport class LoginStatus {\n  constructor(status) {\n    this.status = status;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {PostsUpdate, LoginStatus} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\n\n@inject(Fixtures, EventAggregator)\nexport default class TweetService {\n\n  tweets = [];\n  users = [];\n  posts = 0;\n  loggedInUser = [];\n\n  constructor(data, ea) {\n    this.tweets = data.tweets;\n    this.users = data.users;\n    this.ea = ea;\n  }\n\n  register(firstName, lastName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    this.users[email] = newUser;\n    this.firstName = '';\n    this.lastName = '';\n    this.email = '';\n    this.password = '';\n  }\n\n  login(email, password) {\n    const status = {\n      success: false,\n      message: ''\n    };\n\n    if (this.users[email]) {\n      if (this.users[email].password === password) {\n        status.success = true;\n        status.message = 'logged in';\n        this.loggedInUser = this.users[email];\n      } else {\n        status.message = 'Incorrect password';\n      }\n    } else {\n      status.message = 'Unknown user';\n    }\n    this.ea.publish(new LoginStatus(status));\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ea.publish(new LoginStatus(new LoginStatus(status)));\n  }\n\n  sendTweet(tweeter, text) {\n    if (( tweeter && tweeter !== null) && ( text && text !== null)) {\n      const tweet = {\n        tweeter: tweeter,\n        text: text\n      };\n      this.tweets.push(tweet);\n      this.posts = parseInt(this.tweets.length, 10);\n      this.ea.publish(new PostsUpdate(this.posts));\n      console.log(tweeter.firstName + ' tweeted: ' + text);\n      console.log('Total tweets: ' + this.tweets.length);\n    } else {\n      console.log('Message cannot be empty! Must supply Tweeters name');\n      console.log('Total tweets: ' + this.tweets.length);\n    }\n  }\n\n  addFriend(selectedFriend) {\n    const friend = {\n      firstName: selectedFriend.firstName,\n      lastName: selectedFriend.lastName\n    };\n    console.log('Following: ' + friend.firstName + ' ' + friend.lastName);\n  }\n}\n","export class Dashboard {\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Friend {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.tweets = ts.tweets;\n    let membersTweet = [];\n\n    this.tweets.forEach(tweet => {\n      if (membersTweet.indexOf(tweet) === -1) {\n        membersTweet.push(tweet);\n      }\n      return membersTweet;\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Login {\n\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.prompt = '';\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import TweetService from '../../services/tweet-service';\nimport {inject} from 'aurelia-framework';\n\n@inject(TweetService)\nexport class Logout {\n\n  constructor(tweetService) {\n    this.tweetService = tweetService;\n  }\n\n  logout() {\n    console.log('logging out');\n    this.tweetService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\n\n@inject(TweetService)\nexport class Signup {\n\n  firstName = 'Marge';\n  lastName = 'Simpson';\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(ts) {\n    this.tweetService = ts;\n  }\n\n  register(e) {\n    this.registered = true;\n    this.tweetService.register(this.firstName, this.lastName, this.email, this.password);\n    this.tweetService.login(this.email, this.password);\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {PostsUpdate} from '../../services/messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport TweetService from '../../services/tweet-service';\n\n\n@inject(EventAggregator, TweetService)\nexport class Stats {\n\n  posts = 0;\n\n  constructor(ea, ts) {\n    this.ts = ts;\n    ea.subscribe(PostsUpdate, msg => {\n      this.posts = msg.posts;\n    });\n  }\n\n  attached() {\n    this.posts = this.ts.posts;\n    $('#jiggle')\n      .transition('jiggle', '1000ms')\n    ;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport $ from 'jquery';\n\n@inject(TweetService)\nexport class Timeline {\n\n  tweets = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.tweets = ts.tweets;\n  }\n\n  attached() {\n    $('#tada')\n      .transition('tada', '1200ms')\n    ;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport TweetService from '../../services/tweet-service';\nimport $ from 'jquery';\n\n@inject(TweetService)\nexport class Tweet {\n\n  text = '';\n  tweeter = [];\n\n  constructor(ts) {\n    this.tweetService = ts;\n    this.tweeter = ts.loggedInUser;\n  }\n  createTweet() {\n    this.tweetService.sendTweet(this.tweeter, this.text);\n    this.text = '';\n  }\n  attached() {\n    $('#flip')\n      .transition('horizontal flip', '500ms')\n      .transition('horizontal flip')\n    ;\n  }\n}\n"],"sourceRoot":".."}